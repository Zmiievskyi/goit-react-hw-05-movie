{"version":3,"file":"static/js/546.aa90e8d8.chunk.js","mappings":"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","sources":["components/MovieItem/MovieItem.jsx","components/ThemoviApi/ThemoviApi.js","pages/Home/HomeStyled.js"],"sourcesContent":["import { useEffect, useRef, useState } from 'react';\nimport { Box } from '@mui/system';\nimport { Skeleton } from '@mui/material';\nimport { useLocation, Outlet, NavLink, useParams } from 'react-router-dom';\nimport { Link } from '../../pages/Home/HomeStyled';\n\nimport ThemoviApi from 'components/ThemoviApi/ThemoviApi';\n\nconst MovieItem = () => {\n  const [film, setFilm] = useState(null);\n\n  const { movieId } = useParams();\n  const location = useLocation();\n  const goBackHref = useRef(location.state?.from ?? '/');\n  //   console.log(location.state.from);\n\n  //   console.log(goBackHref);\n\n  useEffect(() => {\n    try {\n      const movieDetail = async () => {\n        const movie = await ThemoviApi.getMovie(movieId);\n        setFilm(movie);\n      };\n      movieDetail();\n    } catch (error) {\n      console.log(error);\n    }\n  }, [movieId]);\n\n  const IMG_URL = 'https://image.tmdb.org/t/p/w500/';\n\n  return (\n    <Box display=\"flex\" flexDirection=\"column\">\n      {film !== null ? (\n        <Box display=\"flex\" borderBottom=\"1px solid grey\" p=\"5px\">\n          <Box p=\"5px\">\n            <Link to={goBackHref.current}>go back</Link>\n            <img\n              src={IMG_URL + film.poster_path}\n              alt={film.title}\n              style={{ width: '150px' }}\n            />\n          </Box>\n\n          <Box p=\"5px\">\n            <h1>\n              {film.title} <span>({film.release_date.split('-')[0]})</span>\n            </h1>\n            <p>User Score:</p>\n            <h2>Overview:</h2>\n            <p>{film.overview}</p>\n            <h2>Genres:</h2>\n            <p>{film.genres.map(item => `${item.name} `)}</p>\n          </Box>\n        </Box>\n      ) : (\n        <Skeleton\n          sx={{ bgcolor: 'grey.900' }}\n          variant=\"rectangular\"\n          width={150}\n          height={225}\n        />\n      )}\n      <ul>\n        <li>\n          <NavLink to=\"cast\">Cast</NavLink>\n        </li>\n        <li>\n          <NavLink to=\"review\">Review</NavLink>\n        </li>\n      </ul>\n      <Outlet />\n    </Box>\n  );\n};\nexport default MovieItem;","import axios from 'axios';\n\nconst ThemoviApi = {\n  API: {\n    KEY: '2c56ca605d93fc994eb0f57dccfe3295',\n    URL: 'https://api.themoviedb.org',\n  },\n\n  getMovieList: async function () {\n    const { KEY, URL } = this.API;\n    const URL_Trand = `${URL}/3/trending/movie/day?api_key=${KEY}`;\n    const trandDay = await axios.get(URL_Trand);\n    return trandDay.data.results;\n  },\n\n  getMovie: async function (id) {\n    const { KEY, URL } = this.API;\n    const URL_Movie = `${URL}/3/movie/${id}?api_key=${KEY}`;\n    const searchMovie = await axios.get(URL_Movie);\n    return searchMovie.data;\n  },\n\n  getActors: async function (id) {\n    const { KEY, URL } = this.API;\n    const URL_Actors = `${URL}/3/movie/${id}/credits?api_key=${KEY}`;\n    const actors = await axios.get(URL_Actors);\n    return actors.data.cast;\n  },\n\n  getReview: async function (id) {\n    const { KEY, URL } = this.API;\n    const URL_Actors = `${URL}/3/movie/${id}/reviews?api_key=${KEY}`;\n    const actors = await axios.get(URL_Actors);\n    return actors.data.results;\n  },\n\n  // searchMovie: async function (query) {\n  //   const { KEY, URL } = this.API;\n  //   const URL_Search = `${URL}/3/search/movie/?api_key=${KEY}&query=${query}`;\n  //   const search = await axios.get(URL_Search);\n  //   return search.data.results;\n  // },\n  searchMovie: function (query) {\n    const { KEY, URL } = this.API;\n    const URL_Search = `${URL}/3/search/movie/?api_key=${KEY}&query=${query}`;\n    // const search = fetch(URL_Search).then(r=>JSON.r);\n    // return search.data.results;\n\n    const search = fetch(URL_Search).then(response => {\n      if (!response.ok) {\n        throw new Error(response.status);\n      }\n      return response.json();\n    });\n    return search;\n  },\n};\nexport default ThemoviApi;\n","import { NavLink } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nexport const Section = styled.section`\npadding: 50px;\n`\n\nexport const Link = styled(NavLink)`\ndisplay: flex;\nflex-direction: column;\npadding: 5px;\n`"],"names":["useState","film","setFilm","movieId","useParams","location","useLocation","goBackHref","useRef","state","from","useEffect","movieDetail","ThemoviApi","movie","error","console","log","display","flexDirection","borderBottom","p","to","current","src","poster_path","alt","title","style","width","release_date","split","overview","genres","map","item","name","sx","bgcolor","variant","height","API","KEY","URL","getMovieList","this","URL_Trand","axios","trandDay","data","results","getMovie","id","URL_Movie","searchMovie","getActors","URL_Actors","actors","cast","getReview","query","URL_Search","fetch","then","response","ok","Error","status","json","Section","styled","Link","NavLink"],"sourceRoot":""}