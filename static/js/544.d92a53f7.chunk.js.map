{"version":3,"file":"static/js/544.d92a53f7.chunk.js","mappings":"gLAEMA,EAAa,CACjBC,IAAK,CACHC,IAAK,mCACLC,IAAK,8BAGPC,aAAa,WAAD,wBAAE,qGACSC,KAAKJ,IAAlBC,EADI,EACJA,IAAKC,EADD,EACCA,IACPG,EAFM,UAESH,EAFT,yCAE6CD,GAF7C,SAGWK,EAAAA,EAAAA,IAAUD,GAHrB,cAGNE,EAHM,yBAILA,EAASC,KAAKC,SAJT,gDAAF,kDAAC,GAObC,SAAS,WAAD,wBAAE,WAAgBC,GAAhB,wFACaP,KAAKJ,IAAlBC,EADA,EACAA,IAAKC,EADL,EACKA,IACPU,EAFE,UAEaV,EAFb,oBAE4BS,EAF5B,oBAE0CV,GAF1C,SAGkBK,EAAAA,EAAAA,IAAUM,GAH5B,cAGFC,EAHE,yBAIDA,EAAYL,MAJX,gDAAF,mDAAC,GAOTM,UAAU,WAAD,wBAAE,WAAgBH,GAAhB,wFACYP,KAAKJ,IAAlBC,EADC,EACDA,IAAKC,EADJ,EACIA,IACPa,EAFG,UAEab,EAFb,oBAE4BS,EAF5B,4BAEkDV,GAFlD,SAGYK,EAAAA,EAAAA,IAAUS,GAHtB,cAGHC,EAHG,yBAIFA,EAAOR,KAAKS,MAJV,gDAAF,mDAAC,GAOVC,UAAU,WAAD,wBAAE,WAAgBP,GAAhB,wFACYP,KAAKJ,IAAlBC,EADC,EACDA,IAAKC,EADJ,EACIA,IACPa,EAFG,UAEab,EAFb,oBAE4BS,EAF5B,4BAEkDV,GAFlD,SAGYK,EAAAA,EAAAA,IAAUS,GAHtB,cAGHC,EAHG,yBAIFA,EAAOR,KAAKC,SAJV,gDAAF,mDAAC,GAaVI,YAAa,SAAUM,GACrB,MAAqBf,KAAKJ,IAAlBC,EAAR,EAAQA,IAAKC,EAAb,EAAaA,IACPkB,EAAU,UAAMlB,EAAN,oCAAqCD,EAArC,kBAAkDkB,GAUlE,OANeE,MAAMD,GAAYE,MAAK,SAAAC,GACpC,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAE3B,OAAOH,EAASI,MACjB,GAEF,GAEH,K,gHC3BA,UAxBa,WAEV,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAUD,OARCC,EAAAA,EAAAA,YAAU,WACR,IAAMF,EAAI,mCAAG,oGACa9B,EAAAA,EAAAA,eADb,OACLiC,EADK,OAEXF,EAAQE,GAFG,2CAAH,qDAIVH,GACD,GAAE,KAGF,SAAC,IAAD,WACE,wBACGA,EAAKI,KAAI,SAAAC,GAAI,OACZ,SAAC,IAAD,CAAoBC,GAAE,iBAAYD,EAAKvB,IAAvC,SACGuB,EAAKE,OADGF,EAAKvB,GADJ,OAQrB,C,mHC1BY0B,EAAUC,EAAAA,GAAAA,QAAH,wCAIPC,GAAOD,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,+E","sources":["components/ThemoviApi/ThemoviApi.js","pages/Home/Home.jsx","pages/Home/HomeStyled.js"],"sourcesContent":["import axios from 'axios';\n\nconst ThemoviApi = {\n  API: {\n    KEY: '2c56ca605d93fc994eb0f57dccfe3295',\n    URL: 'https://api.themoviedb.org',\n  },\n\n  getMovieList: async function () {\n    const { KEY, URL } = this.API;\n    const URL_Trand = `${URL}/3/trending/movie/day?api_key=${KEY}`;\n    const trandDay = await axios.get(URL_Trand);\n    return trandDay.data.results;\n  },\n\n  getMovie: async function (id) {\n    const { KEY, URL } = this.API;\n    const URL_Movie = `${URL}/3/movie/${id}?api_key=${KEY}`;\n    const searchMovie = await axios.get(URL_Movie);\n    return searchMovie.data;\n  },\n\n  getActors: async function (id) {\n    const { KEY, URL } = this.API;\n    const URL_Actors = `${URL}/3/movie/${id}/credits?api_key=${KEY}`;\n    const actors = await axios.get(URL_Actors);\n    return actors.data.cast;\n  },\n\n  getReview: async function (id) {\n    const { KEY, URL } = this.API;\n    const URL_Actors = `${URL}/3/movie/${id}/reviews?api_key=${KEY}`;\n    const actors = await axios.get(URL_Actors);\n    return actors.data.results;\n  },\n\n  // searchMovie: async function (query) {\n  //   const { KEY, URL } = this.API;\n  //   const URL_Search = `${URL}/3/search/movie/?api_key=${KEY}&query=${query}`;\n  //   const search = await axios.get(URL_Search);\n  //   return search.data.results;\n  // },\n  searchMovie: function (query) {\n    const { KEY, URL } = this.API;\n    const URL_Search = `${URL}/3/search/movie/?api_key=${KEY}&query=${query}`;\n    // const search = fetch(URL_Search).then(r=>JSON.r);\n    // return search.data.results;\n\n    const search = fetch(URL_Search).then(response => {\n      if (!response.ok) {\n        throw new Error(response.status);\n      }\n      return response.json();\n    });\n    return search;\n  },\n};\nexport default ThemoviApi;\n","// import { Routes, Route, NavLink, useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\n// const { Link, Section } = lazy(() => import('./HomeStyled'));\nimport { Link, Section } from './HomeStyled';\nimport ThemoviApi from 'components/ThemoviApi/ThemoviApi';\n\nconst Home = () => {\n\n   const [list, setList] = useState([]);\n\n   useEffect(() => {\n     const list = async () => {\n       const movieList = await ThemoviApi.getMovieList();\n       setList(movieList);\n     };\n     list();\n   }, []);\n\n  return (\n    <Section>\n      <ul>\n        {list.map(item => (\n          <Link key={item.id} to={`movies/${item.id}`}>\n            {item.title}\n          </Link>\n        ))}\n      </ul>\n    </Section>\n  );\n};\nexport default Home;","import { NavLink } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nexport const Section = styled.section`\npadding: 50px;\n`\n\nexport const Link = styled(NavLink)`\ndisplay: flex;\nflex-direction: column;\npadding: 5px;\n`"],"names":["ThemoviApi","API","KEY","URL","getMovieList","this","URL_Trand","axios","trandDay","data","results","getMovie","id","URL_Movie","searchMovie","getActors","URL_Actors","actors","cast","getReview","query","URL_Search","fetch","then","response","ok","Error","status","json","useState","list","setList","useEffect","movieList","map","item","to","title","Section","styled","Link","NavLink"],"sourceRoot":""}