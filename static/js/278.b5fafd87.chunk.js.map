{"version":3,"file":"static/js/278.b5fafd87.chunk.js","mappings":"gLAEMA,EAAa,CACjBC,IAAK,CACHC,IAAK,mCACLC,IAAK,8BAGPC,aAAa,WAAD,wBAAE,qGACSC,KAAKJ,IAAlBC,EADI,EACJA,IAAKC,EADD,EACCA,IACPG,EAFM,UAESH,EAFT,yCAE6CD,GAF7C,SAGWK,EAAAA,EAAAA,IAAUD,GAHrB,cAGNE,EAHM,yBAILA,EAASC,KAAKC,SAJT,gDAAF,kDAAC,GAObC,SAAS,WAAD,wBAAE,WAAgBC,GAAhB,wFACaP,KAAKJ,IAAlBC,EADA,EACAA,IAAKC,EADL,EACKA,IACPU,EAFE,UAEaV,EAFb,oBAE4BS,EAF5B,oBAE0CV,GAF1C,SAGkBK,EAAAA,EAAAA,IAAUM,GAH5B,cAGFC,EAHE,yBAIDA,EAAYL,MAJX,gDAAF,mDAAC,GAOTM,UAAU,WAAD,wBAAE,WAAgBH,GAAhB,wFACYP,KAAKJ,IAAlBC,EADC,EACDA,IAAKC,EADJ,EACIA,IACPa,EAFG,UAEab,EAFb,oBAE4BS,EAF5B,4BAEkDV,GAFlD,SAGYK,EAAAA,EAAAA,IAAUS,GAHtB,cAGHC,EAHG,yBAIFA,EAAOR,KAAKS,MAJV,gDAAF,mDAAC,GAOVC,UAAU,WAAD,wBAAE,WAAgBP,GAAhB,wFACYP,KAAKJ,IAAlBC,EADC,EACDA,IAAKC,EADJ,EACIA,IACPa,EAFG,UAEab,EAFb,oBAE4BS,EAF5B,4BAEkDV,GAFlD,SAGYK,EAAAA,EAAAA,IAAUS,GAHtB,cAGHC,EAHG,yBAIFA,EAAOR,KAAKC,SAJV,gDAAF,mDAAC,GAaVI,YAAa,SAAUM,GACrB,MAAqBf,KAAKJ,IAAlBC,EAAR,EAAQA,IAAKC,EAAb,EAAaA,IACPkB,EAAU,UAAMlB,EAAN,oCAAqCD,EAArC,kBAAkDkB,GAUlE,OANeE,MAAMD,GAAYE,MAAK,SAAAC,GACpC,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAE3B,OAAOH,EAASI,MACjB,GAEF,GAEH,K,mHCtDaC,EAAUC,EAAAA,GAAAA,QAAH,wCAIPC,GAAOD,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,+E,oICiDjB,UAlDe,WAAO,IAAD,EACnB,GAAwBG,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA4BC,EAAAA,EAAAA,MAA5B,eAAOC,EAAP,KAAeC,EAAf,KAEMC,GAAWC,EAAAA,EAAAA,MACXC,EAAS,UAAGJ,EAAOK,IAAI,gBAAd,QAA0B,IAEzCC,EAAAA,EAAAA,YAAU,WACR,GAAkB,KAAdF,EAGJ,IACE,IAAMG,EAAW,mCAAG,oGACE5C,EAAAA,EAAAA,YAAuByC,GADzB,OACZI,EADY,OAElBV,EAAQU,EAAMnC,SAFI,2CAAH,qDAIjBkC,GAGD,CAFC,MAAOE,GACPC,QAAQC,IAAIF,EACb,CACF,GAAE,CAACL,IAQJ,OACE,iCACE,kBAAMQ,SARW,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,OAAOC,SAASlC,MAAMmC,MACrCjB,EAAU,CAAElB,MAAOgC,GACpB,EAIiCI,aAAa,MAA3C,WACE,kBAAOJ,KAAK,QAAQK,aAAchB,KAClC,mBAAQiB,KAAK,SAAb,uBAEDxB,IACC,wBACGA,EAAKyB,KAAI,SAAAC,GAAI,OACZ,SAAC,IAAD,CAEEC,GAAE,kBAAaD,EAAKhD,IACpBkD,MAAO,CAAEC,KAAMxB,GAHjB,SAKGqB,EAAKI,OAJDJ,EAAKhD,GAFA,QAavB,C","sources":["components/ThemoviApi/ThemoviApi.js","pages/Home/HomeStyled.js","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst ThemoviApi = {\n  API: {\n    KEY: '2c56ca605d93fc994eb0f57dccfe3295',\n    URL: 'https://api.themoviedb.org',\n  },\n\n  getMovieList: async function () {\n    const { KEY, URL } = this.API;\n    const URL_Trand = `${URL}/3/trending/movie/day?api_key=${KEY}`;\n    const trandDay = await axios.get(URL_Trand);\n    return trandDay.data.results;\n  },\n\n  getMovie: async function (id) {\n    const { KEY, URL } = this.API;\n    const URL_Movie = `${URL}/3/movie/${id}?api_key=${KEY}`;\n    const searchMovie = await axios.get(URL_Movie);\n    return searchMovie.data;\n  },\n\n  getActors: async function (id) {\n    const { KEY, URL } = this.API;\n    const URL_Actors = `${URL}/3/movie/${id}/credits?api_key=${KEY}`;\n    const actors = await axios.get(URL_Actors);\n    return actors.data.cast;\n  },\n\n  getReview: async function (id) {\n    const { KEY, URL } = this.API;\n    const URL_Actors = `${URL}/3/movie/${id}/reviews?api_key=${KEY}`;\n    const actors = await axios.get(URL_Actors);\n    return actors.data.results;\n  },\n\n  // searchMovie: async function (query) {\n  //   const { KEY, URL } = this.API;\n  //   const URL_Search = `${URL}/3/search/movie/?api_key=${KEY}&query=${query}`;\n  //   const search = await axios.get(URL_Search);\n  //   return search.data.results;\n  // },\n  searchMovie: function (query) {\n    const { KEY, URL } = this.API;\n    const URL_Search = `${URL}/3/search/movie/?api_key=${KEY}&query=${query}`;\n    // const search = fetch(URL_Search).then(r=>JSON.r);\n    // return search.data.results;\n\n    const search = fetch(URL_Search).then(response => {\n      if (!response.ok) {\n        throw new Error(response.status);\n      }\n      return response.json();\n    });\n    return search;\n  },\n};\nexport default ThemoviApi;\n","import { NavLink } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nexport const Section = styled.section`\npadding: 50px;\n`\n\nexport const Link = styled(NavLink)`\ndisplay: flex;\nflex-direction: column;\npadding: 5px;\n`","import { useEffect, useState } from 'react';\n// import { Box } from '@mui/system';\nimport { useSearchParams, useLocation } from 'react-router-dom';\nimport { Link } from '../Home/HomeStyled';\nimport ThemoviApi from 'components/ThemoviApi/ThemoviApi';\n\nconst Movies = () => {\n  const [list, setList] = useState('');\n  const [params, setParams] = useSearchParams();\n\n  const location = useLocation();\n  const movieName = params.get('query') ?? '';\n\n  useEffect(() => {\n    if (movieName === '') {\n      return;\n    }\n    try {\n      const movieSearch = async () => {\n        const movie = await ThemoviApi.searchMovie(movieName);\n        setList(movie.results);\n      };\n      movieSearch();\n    } catch (error) {\n      console.log(error);\n    }\n  }, [movieName]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const name = e.target.elements.query.value;\n    setParams({ query: name });\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit} autoComplete=\"off\">\n        <input name=\"query\" defaultValue={movieName} />\n        <button type=\"submit\">search</button>\n      </form>\n      {list && (\n        <ul>\n          {list.map(item => (\n            <Link\n              key={item.id}\n              to={`/movies/${item.id}`}\n              state={{ from: location }}\n            >\n              {item.title}\n            </Link>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n};\nexport default Movies;"],"names":["ThemoviApi","API","KEY","URL","getMovieList","this","URL_Trand","axios","trandDay","data","results","getMovie","id","URL_Movie","searchMovie","getActors","URL_Actors","actors","cast","getReview","query","URL_Search","fetch","then","response","ok","Error","status","json","Section","styled","Link","NavLink","useState","list","setList","useSearchParams","params","setParams","location","useLocation","movieName","get","useEffect","movieSearch","movie","error","console","log","onSubmit","e","preventDefault","name","target","elements","value","autoComplete","defaultValue","type","map","item","to","state","from","title"],"sourceRoot":""}